# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Ontology(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, schemaincluded_in_data_catalog: str=None, id: str=None, type: str='http://www.w3.org/2002/07/owl#Ontology', dcttitle: str=None, dctdescription: str=None, omvacronym: str=None, owlversion_info: str=None, dctmodified: str=None):
        """
        Ontology - a model defined in Swagger

        :param schemaincluded_in_data_catalog: The schemaincluded_in_data_catalog of this Ontology.
        :type schemaincluded_in_data_catalog: str
        :param id: The id of this Ontology.
        :type id: str
        :param type: The type of this Ontology.
        :type type: str
        :param dcttitle: The dcttitle of this Ontology.
        :type dcttitle: str
        :param dctdescription: The dctdescription of this Ontology.
        :type dctdescription: str
        :param omvacronym: The omvacronym of this Ontology.
        :type omvacronym: str
        :param owlversion_info: The owlversion_info of this Ontology.
        :type owlversion_info: str
        :param dctmodified: The dctmodified of this Ontology.
        :type dctmodified: str
        """
        self.swagger_types = {
            'schemaincluded_in_data_catalog': str,
            'id': str,
            'type': str,
            'dcttitle': str,
            'dctdescription': str,
            'omvacronym': str,
            'owlversion_info': str,
            'dctmodified': str
        }

        self.attribute_map = {
            'schemaincluded_in_data_catalog': 'http://schema.org/includedInDataCatalog',
            'id': '@id',
            'type': '@type',
            'dcttitle': 'http://purl.org/dc/terms/title',
            'dctdescription': 'http://purl.org/dc/terms/description',
            'omvacronym': 'http://omv.ontoware.org/2005/05/ontology#acronym',
            'owlversion_info': 'http://www.w3.org/2002/07/owl#versionInfo',
            'dctmodified': 'http://purl.org/dc/terms/modified'
        }

        self._schemaincluded_in_data_catalog = schemaincluded_in_data_catalog
        self._id = id
        self._type = type
        self._dcttitle = dcttitle
        self._dctdescription = dctdescription
        self._omvacronym = omvacronym
        self._owlversion_info = owlversion_info
        self._dctmodified = dctmodified

    @classmethod
    def from_dict(cls, dikt) -> 'Ontology':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ontology of this Ontology.
        :rtype: Ontology
        """
        return deserialize_model(dikt, cls)

    @property
    def schemaincluded_in_data_catalog(self) -> str:
        """
        Gets the schemaincluded_in_data_catalog of this Ontology.

        :return: The schemaincluded_in_data_catalog of this Ontology.
        :rtype: str
        """
        return self._schemaincluded_in_data_catalog

    @schemaincluded_in_data_catalog.setter
    def schemaincluded_in_data_catalog(self, schemaincluded_in_data_catalog: str):
        """
        Sets the schemaincluded_in_data_catalog of this Ontology.

        :param schemaincluded_in_data_catalog: The schemaincluded_in_data_catalog of this Ontology.
        :type schemaincluded_in_data_catalog: str
        """

        self._schemaincluded_in_data_catalog = schemaincluded_in_data_catalog

    @property
    def id(self) -> str:
        """
        Gets the id of this Ontology.

        :return: The id of this Ontology.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """
        Sets the id of this Ontology.

        :param id: The id of this Ontology.
        :type id: str
        """

        self._id = id

    @property
    def type(self) -> str:
        """
        Gets the type of this Ontology.

        :return: The type of this Ontology.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """
        Sets the type of this Ontology.

        :param type: The type of this Ontology.
        :type type: str
        """

        self._type = type

    @property
    def dcttitle(self) -> str:
        """
        Gets the dcttitle of this Ontology.

        :return: The dcttitle of this Ontology.
        :rtype: str
        """
        return self._dcttitle

    @dcttitle.setter
    def dcttitle(self, dcttitle: str):
        """
        Sets the dcttitle of this Ontology.

        :param dcttitle: The dcttitle of this Ontology.
        :type dcttitle: str
        """

        self._dcttitle = dcttitle

    @property
    def dctdescription(self) -> str:
        """
        Gets the dctdescription of this Ontology.

        :return: The dctdescription of this Ontology.
        :rtype: str
        """
        return self._dctdescription

    @dctdescription.setter
    def dctdescription(self, dctdescription: str):
        """
        Sets the dctdescription of this Ontology.

        :param dctdescription: The dctdescription of this Ontology.
        :type dctdescription: str
        """

        self._dctdescription = dctdescription

    @property
    def omvacronym(self) -> str:
        """
        Gets the omvacronym of this Ontology.

        :return: The omvacronym of this Ontology.
        :rtype: str
        """
        return self._omvacronym

    @omvacronym.setter
    def omvacronym(self, omvacronym: str):
        """
        Sets the omvacronym of this Ontology.

        :param omvacronym: The omvacronym of this Ontology.
        :type omvacronym: str
        """

        self._omvacronym = omvacronym

    @property
    def owlversion_info(self) -> str:
        """
        Gets the owlversion_info of this Ontology.

        :return: The owlversion_info of this Ontology.
        :rtype: str
        """
        return self._owlversion_info

    @owlversion_info.setter
    def owlversion_info(self, owlversion_info: str):
        """
        Sets the owlversion_info of this Ontology.

        :param owlversion_info: The owlversion_info of this Ontology.
        :type owlversion_info: str
        """

        self._owlversion_info = owlversion_info

    @property
    def dctmodified(self) -> str:
        """
        Gets the dctmodified of this Ontology.

        :return: The dctmodified of this Ontology.
        :rtype: str
        """
        return self._dctmodified

    @dctmodified.setter
    def dctmodified(self, dctmodified: str):
        """
        Sets the dctmodified of this Ontology.

        :param dctmodified: The dctmodified of this Ontology.
        :type dctmodified: str
        """

        self._dctmodified = dctmodified

