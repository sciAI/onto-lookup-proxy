# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Repository(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, url: str=None, name: str=None, description: str=None, version: str=None):
        """
        Repository - a model defined in Swagger

        :param url: The url of this Repository.
        :type url: str
        :param name: The name of this Repository.
        :type name: str
        :param description: The description of this Repository.
        :type description: str
        :param version: The version of this Repository.
        :type version: str
        """
        self.swagger_types = {
            'url': str,
            'name': str,
            'description': str,
            'version': str
        }

        self.attribute_map = {
            'url': 'url',
            'name': 'name',
            'description': 'description',
            'version': 'version'
        }

        self._url = url
        self._name = name
        self._description = description
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'Repository':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The repository of this Repository.
        :rtype: Repository
        """
        return deserialize_model(dikt, cls)

    @property
    def url(self) -> str:
        """
        Gets the url of this Repository.

        :return: The url of this Repository.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """
        Sets the url of this Repository.

        :param url: The url of this Repository.
        :type url: str
        """

        self._url = url

    @property
    def name(self) -> str:
        """
        Gets the name of this Repository.

        :return: The name of this Repository.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """
        Sets the name of this Repository.

        :param name: The name of this Repository.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """
        Gets the description of this Repository.

        :return: The description of this Repository.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """
        Sets the description of this Repository.

        :param description: The description of this Repository.
        :type description: str
        """

        self._description = description

    @property
    def version(self) -> str:
        """
        Gets the version of this Repository.

        :return: The version of this Repository.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """
        Sets the version of this Repository.

        :param version: The version of this Repository.
        :type version: str
        """

        self._version = version

